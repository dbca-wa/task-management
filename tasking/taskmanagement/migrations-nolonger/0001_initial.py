# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2019-11-19 09:02
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_id', models.CharField(max_length=10)),
                ('system_name', models.CharField(max_length=256)),
                ('api_key', models.CharField(max_length=256)),
                ('enabled', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_title', models.CharField(max_length=256)),
                ('task_description', models.TextField(blank=True, default='', null=True)),
                ('system_reference_number', models.CharField(max_length=256)),
                ('task_type', models.IntegerField(choices=[(0, 'Task'), (1, 'System Task')], default=-1)),
                ('status', models.IntegerField(choices=[(0, 'Closed'), (1, 'Open')], default=1)),
                ('deferred_to', models.DateTimeField(blank=True, null=True)),
                ('extra_meta', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taskmanagement.System')),
            ],
        ),
        migrations.CreateModel(
            name='TaskAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_group', models.IntegerField(choices=[(0, 'taskgroup'), (1, 'emailuser'), (2, 'emailuser_id')], default=-1)),
                ('assignment_value', models.IntegerField()),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanagement.Task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskEscalation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('esculation_dt', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanagement.Task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskEscalationAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_group', models.IntegerField(choices=[(0, 'taskgroup'), (1, 'emailuser'), (2, 'emailuser_id')], default=-1)),
                ('assignment_value', models.IntegerField()),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('esculation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanagement.TaskEscalation')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanagement.Task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=256)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaskGroupAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('task_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanagement.TaskGroup')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaskLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.IntegerField(choices=[(0, 'Create'), (1, 'Update'), (2, 'API Create'), (3, 'API Update'), (4, 'Assign'), (5, 'API Assign')], default=1)),
                ('parameters', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taskmanagement.System')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanagement.Task')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaskOwner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_group', models.IntegerField(choices=[(0, 'taskgroup'), (1, 'emailuser'), (2, 'emailuser_id')], default=-1)),
                ('assignment_value', models.IntegerField()),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanagement.Task')),
            ],
        ),
    ]
